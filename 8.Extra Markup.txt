EXTRA MARKUP

SUMMARY
=> DOCTYPES tell browsers which version of HTML you are using.
=> You can add comments to your code between the <!-- and --> markers.
=> The id and class attributes allow you to identify particular elements.
=> The <div> and <span> elements allow you to group block-level and inline elements together.
=> <iframes> cut windows into your web pages through which other pages can be displayed.
=> The <meta> tag allows you to supply all kinds of information about your web page.
=> Escape characters are used to include special characters in your pages such as <, >, and ©.

KEYPOINTS:
=> The different versions of HTML and how to indicate which version you are using.
=> How to add comments to your code.
=> Global attributes, which are attributes that can be used on any element, including the class and id attributes.
=> Elements that are used to group together parts of the page where no other element is suitable.
=> How to embed a page within a page using iframes.
=> How to add information about the web page using the <meta> element.
=> Adding characters such as angled brackets and copyright symbols.

--------------------------------------------------------------------------------------------------------------------------------------------

EVOLUTION OF HTML:
=> You can see on Evolution of HTML(1) Picture.
=> You can see on Evolution of HTML(2) Picture.

--------------------------------------------------------------------------------------------------------------------------------------------

DOCTYPES:
=> Because there have been several versions of HTML, each web page should begin with a DOCTYPE declaration to tell a browser which version of HTML the page is using (although browsers usually display the page even if it is not included). We will therefore be including one in each example for the rest of the book.
=> As you will see when we come to look at CSS and its box model on page 316, the use of a DOCTYPE can also help the browser to render a page correctly.

NOTE:
=> Because XHTML was written in XML, you will sometimes see pages that use the XHTML strict DOCTYPE start with the optional XML declaration. Where this is used, it should be the first thing in a document. There must be nothing before it, not even a space.

=> You can see on DOCTYPE version Picture.

--------------------------------------------------------------------------------------------------------------------------------------------

COMMENTS IN HTML:
=> <!-- -->
=> If you want to add a comment to your code that will not be visible in the user's browser, you can add the text between these characters:
=> <!-- comment goes here -->
=> It is a good idea to add comments to your code because, no matter how familiar you are with the page at the time of writing it, when you come back to it later (or if someone else needs to look at the code), comments will make it much easier to understand.
=> Although comments are not visible to users in the main browser window, they can be viewed by anyone who looks at the source code behind the page.
=> On a long page you will often see comments used to indicate where sections of the page start or end, and to pass on notes to help anyone who is looking at the code understand it.
=> Comments can also be used around blocks of code to stop that code from being displayed in the browser. In the example on the left, the email link has been commented out.

--------------------------------------------------------------------------------------------------------------------------------------------

ID ATTRIBUTE:
=> Every HTML element can carry the id attribute. It is used to uniquely identify that element from other elements on the page. Its value should start with a letter or an underscore (not a number or any other character). It is important that no two elements on the same page have the same value for their id attributes (otherwise the value is no longer unique).
=> As you will see when you come to look at CSS in the next section, giving an element a unique identity allows you to style it differently than any other instance of the same element on the page. For example, you might want to assign one paragraph within the page (perhaps a paragraph containing a pull quote) a different style than all of the other paragraphs. In the example on the right, the paragraph with the id attribute whose value is pullquote is made uppercase using CSS.
=> If you go on to learn about JavaScript (a language that allows you to add interactivity to your pages), id attributes can be used to allow the script to work with that particular element.
=> The id attribute is known as a global attribute because it can be used on any element.

--------------------------------------------------------------------------------------------------------------------------------------------

CLASS ATTRIBUTE:
=> Every HTML element can also carry a class attribute. Sometimes, rather than uniquely identifying one element within a document, you will want a way to identify several elements as being different from the other elements on the page. For example, you might have some paragraphs of text that contain information that is more important than others and want to distinguish these elements, or you might want to differentiate between links that point to other pages on your own site and links that point to external sites.
=> To do this you can use the class attribute. Its value should describe the class it belongs to. In the example on the left, key paragraphs have a class attribute whose value is important.
=> The class attribute on any element can share the same value. So, in this example, the value of important could be used on headings and links, too.

NOTE:
=> Both ID and CLASS concept are understanding in CSS section.

--------------------------------------------------------------------------------------------------------------------------------------------

BLOCK ELEMENTS:
=> Some elements will always appear to start on a new line in the browser window. These are known as block level elements. 
=> Examples of block elements are <h1>, <p>, <ul>, and <li>.

--------------------------------------------------------------------------------------------------------------------------------------------

INLINE ELEMENTS:
=> Some elements will always appear to continue on the same line as their neighbouring elements. These are known as inline elements. 
=> Examples of inline elements are <a>, <b>, <em>, and <img>.

--------------------------------------------------------------------------------------------------------------------------------------------

GROUPING TEXT & ELEMENTS IN A BLOCK:
=> <div>
=> The <div> element allows you to group a set of elements together in one block-level box.
=> For example, you might create a <div> element to contain all of the elements for the header of your site (the logo and the navigation), or you might create a <div> element to contain comments from visitors.
=> In a browser, the contents of the <div> element will start on a new line, but other than this it will make no difference to the presentation of the page.
=> Using an id or class attribute on the <div> element, however, means that you can create CSS style rules to indicate how much space the <div> element should occupy on the screen and change the appearance of all the elements contained within it.
=> It can also make it easier to follow your code if you have used <div> elements to hold each section of the page.

NOTE:
=> Since there may be several other elements inside a <div> element, it can be helpful to add a comment after the closing </div> tag.
=> This allows you to clearly see which opening tag it is supposed to correspond to, as shown at the end of the example here.

--------------------------------------------------------------------------------------------------------------------------------------------

GROUPING TEXT & ELEMENTS INLINE:
=> <span>
=> The <span> element acts like an inline equivalent of the <div> element. It is used to either:
=> 1. Contain a section of text where there is no other suitable element to differentiate it from its surrounding text
=> 2. Contain a number of inline elements.
=> The most common reason why people use <span> elements is so that they can control the appearance of the content of these elements using CSS.
=> You will usually see that a class or id attribute is used with <span> elements:
        To explain the purpose of this <span> element.
        So that CSS styles can be applied to elements that have specific values for these attributes.

--------------------------------------------------------------------------------------------------------------------------------------------

IFRAMES:
=> <iframe>
=> An iframe is like a little window that has been cut into your page — and in that window you can see another page. The term iframe is an abbreviation of inline frame.
=> One common use of iframes (that you may have seen on various websites) is to embed a Google Map into a page. The content of the iframe can be any html page (either located on the same server or anywhere else on the web).
=> An iframe is created using the <iframe> element. There are a few attributes that you will need to know to use it:

=> src
=> The src attribute specifies the URL of the page to show in the frame.

=> height
=> The height attribute specifies the height of the iframe in pixels.

=> width
=> The width attribute specifies the width of the iframe in pixels.

scrolling
The scrolling attribute will not be supported in HTML5. In HTML 4 and XHTML, it indicates whether the iframe should have scrollbars or not. This is important if the page inside the iframe is larger than the space you have allowed for it (using the height and width attributes). Scrollbars allow the user to move around the frame to see more content. It can take one of three values: yes (to show scrollbars), no (to hide scrollbars) and auto (to show them only if needed).

frameborder
The frameborder attribute will not be supported in HTML5. In HTML 4 and XHTML, it indicates whether the frame should have a border or not. A value of 0 indicates that no border should be shown. A value of 1 indicates that a border should be shown.

seamless
In HTML5, a new attribute called seamless can be applied to an iframe where scrollbars are not desired. The seamless attribute (like some other new HTML5 attributes) does not need a value, but you will often see authors give it a value of seamless. Older browsers do not support the seamless attribute.

--------------------------------------------------------------------------------------------------------------------------------------------

INFORMATION ABOUT YOUR PAGES:

=> You can see on Information About Your Page(1) Picture.
=> You can see on Information About Your Page(2) Picture.

--------------------------------------------------------------------------------------------------------------------------------------------

ESCAPE CHARACTERS:

=> You can see on Escape Characters(1) Picture.
=> You can see on Escape Characters(2) Picture.
